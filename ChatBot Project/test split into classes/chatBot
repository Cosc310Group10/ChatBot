// ------------------------------------------------------------------------------------------------------------------
  // below is the chatbot and analyze function methods to determine chatbots
  // reponse

  // this method is the chatbot method which calls the analyze function method to
  // determine the chatbot response
  public static void chatBot(String userInput) {
    analyzeInput(userInput);
  }

  // this method takes in the users input and directs how the robot is going to
  // respond by creating sub problems to solve
  // with other methods
  public static void analyzeInput(String userInput) {

    // here we check if the input is a greeting or not
    for (int i = 0; i < greetingResponses.size(); i++) {
      // if the user input contains a greeting we simply call the greeting function to
      // respond
      if (userInput.contains(greetingResponses.get(i).toLowerCase())) {
        greetingChatFunction();
        return;
      }
    }

    // if the userInput contains a movie title, we segregate ithe users query to
    // being about movies
    for (int j = 0; j < listOfMovies.size(); j++) {
      if (userInput.contains(listOfMovies.get(j).getTitle().toLowerCase())) {
        movieTitleAsked = listOfMovies.get(j).getTitle().toLowerCase();

        // then we send the user input and the movie title asked about to a chat
        // function which determines
        // the robots reponse
        movieChatFunction(userInput, movieTitleAsked);
        return;

      }
    }

    // if the userInput does not contain a movie title,
    // we segregate the users query to being about the bots personal life
    for (int k = 0; k < personalQuestion.size(); k++) {

      if (userInput.contains(personalQuestion.get(k).toLowerCase())) {
        personalQuestionAsked = personalQuestion.get(k).toLowerCase();
        // then we send the user input and the personal question asked about to a chat
        // function which determines
        // the robots reponse
        personalChatFunction(userInput, personalQuestionAsked);
        return;
      }
    }

    // otherwise we call the default response
    defaultResponse();
    return;

  }

  // ---------------------------------------------------------------------------------------------------------
  // This is the movie chat function for the chatbot, which loops through the
  // movie questions and determines
  // depending on which question is asked how the bot will respond using the
  // corresponding map and key value pair
  public static void movieChatFunction(String userInput, String movieTitleAsked) {

    for (int i = 0; i < movieQuestion.size(); i++) {
      if (userInput.contains(movieQuestion.get(0))) {

        System.out.println(movieTitleAsked + " " + imdbMap.get(movieTitleAsked));
        break;

      } else if (userInput.contains(movieQuestion.get(1))) {
        System.out.println(movieTitleAsked + " " + yearMap.get(movieTitleAsked));
        break;

      } else if (userInput.contains(movieQuestion.get(2))) {
        System.out.println(movieTitleAsked + " " + ratingMap.get(movieTitleAsked));
        break;

      } else if (userInput.contains(movieQuestion.get(3))) {
        System.out.println(movieTitleAsked + " " + castMap.get(movieTitleAsked));
        break;
      } else if (userInput.contains(movieQuestion.get(4))) {
        System.out.println(movieTitleAsked + " " + directorMap.get(movieTitleAsked));
        break;
      } else if (userInput.contains(movieQuestion.get(5))) {
        System.out.println(movieTitleAsked + " " + genreMap.get(movieTitleAsked));
        break;
      } else if (userInput.contains(movieQuestion.get(6))) {
        System.out.println(movieTitleAsked + " " + awardsMap.get(movieTitleAsked));
        break;
      } else if (userInput.contains(movieQuestion.get(7))) {
        System.out.println(movieTitleAsked + " " + boxOfficeMap.get(movieTitleAsked));
        break;
      } else if (userInput.contains(movieQuestion.get(8))) {
        System.out.println(movieTitleAsked + " " + locationMap.get(movieTitleAsked));
        break;
      } else if (userInput.contains(movieQuestion.get(9))) {
        System.out.println(movieTitleAsked + " " + timeToFilmMap.get(movieTitleAsked));
        break;
      } else if (userInput.contains(movieQuestion.get(10))) {
        System.out.println(movieTitleAsked + " " + durationMap.get(movieTitleAsked));
        break;
      } else if (userInput.contains(movieQuestion.get(11))) {
        System.out.println(movieTitleAsked + " " + budgetMap.get(movieTitleAsked));
        break;
      } else {

        return;
      }
    }

  }

  // ---------------------------------------------------------------------------------------------------------

  // This is the personal chat function for the chatbot which prints out the
  // response from the personal map
  // that gets the key of the question asked and prints the value of that key
  // value pair
  public static void personalChatFunction(String userInput, String personalQuestionAsked) {

    System.out.println(personalQuestionMap.get(personalQuestionAsked));
    askAQuestionResponse(); // asks a question back to the user
  }

  // ---------------------------------------------------------------------------------------------------------

  // ------------------------------------------------------------------------------------------------------------------
  // below is the greeting method
  // this is the greeting method, this method generates a random number from 0 to
  // 10 and determines how the chatbot would
  // respond to the user saying hello
  public static void greetingChatFunction() {

    // generate random number from 0 to 10
    int randomNumber = (int) (Math.random() * 11);

    // switch statement to determine responses
    switch (randomNumber) {
      case 0:
        System.out.println("Hello!");
        break;
      case 1:
        System.out.println("Hey Hey!");
        break;
      case 2:
        System.out.println("Hi there");
        break;
      case 3:
        System.out.println("Hi how are ya!");
        break;
      case 4:
        System.out.println("Hello there");
        break;
      case 5:
        System.out.println("Hey! I am Ryan Reynolds, nice to meet you!");
        break;
      case 6:
        System.out.println("What a beautiful day to meet someone as great as me hey? Haha, Hi nice to meet you!");
        break;
      case 7:
        System.out.println("Yo!");
        break;
      case 8:
        System.out.println("Hey there");
        break;
      case 9:
        System.out.println("Hi, nice to meet you!");
        break;
      case 10:
        System.out.println("Hey!");
        break;
      default:
        return;

    }

  }

  // ------------------------------------------------------------------------------------------------------------------
  // below is the ask a question method which determines if the bot asks the
  // question back to the user or not

  public static void askAQuestionResponse() {
    int random = (int) (Math.random() * 6); // 1/6 of the time the chat bot asks a question back to the user

    if (random == 1) {
      System.out.println("\nHow about you?");
      askAQuestion = true;

    } else {
      return;
    }

  }

  // ------------------------------------------------------------------------------------------------------------------
  // this is a method that is called as a default response if the chat bot is
  // unable to determine how to respond
  public static void defaultResponse() {
    //If all else fails and the chat bot does not not how to respond, we have these 5 statements set as
      // the chat bot's default responses to any questions it does not know

      //random value to select a response
      int selector = (int) (Math.random()*5);
     
      switch(selector){
      // case statements: each is a unique response when the question is not understood
        case 0 :
          System.out.println("I'm sorry I don't understand the question. Please ask me again!");
          break;
        case 1 :
          System.out.println("Pardon? I didn't quite get that.");
          break;
        case 2 :
          System.out.println("I'm sorry I don't understand the question. Maybe it's because of your accent hahaha!");
          break;
        case 3 :
          System.out.println("Sorry, you will have to ask that again.");
          break;
        case 4 :
          System.out.println("That was a confusing question! Can you ask me again?");
          break;
        default : 
      }
  }

}